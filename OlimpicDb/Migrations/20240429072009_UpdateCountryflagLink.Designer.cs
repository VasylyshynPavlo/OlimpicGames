// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlimpicDb.Data;

#nullable disable

namespace OlimpicDb.Migrations
{
    [DbContext(typeof(OlimpicDbContext))]
    [Migration("20240429072009_UpdateCountryflagLink")]
    partial class UpdateCountryflagLink
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OlimpicDb.Entity.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryFlagLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OlimpicDb.Entity.OlimpicGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId")
                        .IsUnique();

                    b.ToTable("OlimpicGames");
                });

            modelBuilder.Entity("OlimpicDb.Entity.OlimpicGameSport", b =>
                {
                    b.Property<int>("OlimpicGameId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("OlimpicGameId", "SportId");

                    b.HasIndex("SportId");

                    b.ToTable("OlimpicGameSports");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("OlimpicGameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("OlimpicDb.Entity.PlayerOlimpicGame", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("OlimpicGameId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "OlimpicGameId");

                    b.HasIndex("OlimpicGameId");

                    b.ToTable("PlayerOlimpicGames");
                });

            modelBuilder.Entity("OlimpicDb.Entity.PlayerSport", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "SportId");

                    b.HasIndex("SportId");

                    b.ToTable("PlayerSports");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SportId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("OlimpicDb.Entity.OlimpicGame", b =>
                {
                    b.HasOne("OlimpicDb.Entity.Place", "Place")
                        .WithOne("OlimpicGame")
                        .HasForeignKey("OlimpicDb.Entity.OlimpicGame", "PlaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("OlimpicDb.Entity.OlimpicGameSport", b =>
                {
                    b.HasOne("OlimpicDb.Entity.OlimpicGame", "OlimpicGame")
                        .WithMany("OlimpicGameSports")
                        .HasForeignKey("OlimpicGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlimpicDb.Entity.Sport", "Sport")
                        .WithMany("OlimpicGameSports")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OlimpicGame");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Place", b =>
                {
                    b.HasOne("OlimpicDb.Entity.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OlimpicDb.Entity.PlayerOlimpicGame", b =>
                {
                    b.HasOne("OlimpicDb.Entity.OlimpicGame", "OlimpicGame")
                        .WithMany("PlayerOlimpicGames")
                        .HasForeignKey("OlimpicGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlimpicDb.Entity.Player", "Player")
                        .WithMany("PlayerOlimpicGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OlimpicGame");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OlimpicDb.Entity.PlayerSport", b =>
                {
                    b.HasOne("OlimpicDb.Entity.Player", "Player")
                        .WithMany("PlayerSports")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlimpicDb.Entity.Sport", "Sport")
                        .WithMany("PlayerSports")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Statistic", b =>
                {
                    b.HasOne("OlimpicDb.Entity.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OlimpicDb.Entity.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("OlimpicDb.Entity.OlimpicGame", b =>
                {
                    b.Navigation("OlimpicGameSports");

                    b.Navigation("PlayerOlimpicGames");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Place", b =>
                {
                    b.Navigation("OlimpicGame")
                        .IsRequired();
                });

            modelBuilder.Entity("OlimpicDb.Entity.Player", b =>
                {
                    b.Navigation("PlayerOlimpicGames");

                    b.Navigation("PlayerSports");
                });

            modelBuilder.Entity("OlimpicDb.Entity.Sport", b =>
                {
                    b.Navigation("OlimpicGameSports");

                    b.Navigation("PlayerSports");
                });
#pragma warning restore 612, 618
        }
    }
}
